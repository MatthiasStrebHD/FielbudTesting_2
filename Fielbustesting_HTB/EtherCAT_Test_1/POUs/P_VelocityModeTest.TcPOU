<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="P_VelocityModeTest" Id="{20dbc57a-bcdc-4d5e-be58-5c2d209d0155}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P_VelocityModeTest
VAR
	fbVelocityMode					: VelocityMode;
	fbGetStatusword					: FB_EcCoeSdoRead;
	fbGetActualVelocity				: FB_EcCoeSdoRead;
	bGetStatusword					: BOOL; 
	nTargetVelocity					: DINT := 50; //rpm
	nActualVelocity					: DINT;
	nStatusword						: UINT;
	
	bGetActualVelocity				: BOOL;
	fActualVelocityRead				: F_TRIG;
	fStatusWordRead					: F_TRIG;
END_VAR

VAR
	bSetVelocity					: BOOL; 
	bStopMotor						: BOOL;
	bSetControlWord					: BOOL := FALSE;
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[// read FBs
bGetActualVelocity := TRUE;
bGetStatusword := TRUE;


fbGetStatusword(sNetId := GVL.sNetId,
				nSlaveAddr := GVL.nSlaveAddr,
				nIndex := 16#6041,
				nSubindex := 0,
				pDstBuf := ADR(nStatusWord),
				cbBufLen := SIZEOF(nStatusWord),
				bExecute := bGetStatusword);
				
fbGetActualVelocity(sNetId := GVL.sNetId,
					nSlaveAddr := GVL.nSlaveAddr,
					nIndex := 16#6044,
					nSubindex := 0,
					pDstBuf := ADR(nActualVelocity),
					cbBufLen := SIZEOF(nActualVelocity),
					bExecute := bGetActualVelocity);

//set velocity
MAIN.Controlword.4 := bSetControlWord; //velocity demand value shall equal to ramp output value
MAIN.Controlword.5 := bSetControlWord; //ramp output value shall follow ramp input value
MAIN.Controlword.6 := bSetControlWord; //ramp input value shall accord with ramp reference

fbVelocityMode(sNetID := GVL.sNetId,
				nSlaveAddr := GVL.nSlaveAddr,
				nTargetVelocity := nTargetVelocity,
				bSetVelocity := bSetVelocity);
				
//stop
IF bStopMotor THEN
	//MAIN.Controlword.8 := 1; //Motor shall be stopped
	MAIN.Controlword := 0;
END_IF
// TODO implement request object 605D<2 velocity deceleration and 605D>=2 quick stop





//reset FBs
fActualVelocityRead(CLK := fbGetActualVelocity.bBusy);
IF fActualVelocityRead.Q THEN
	bGetActualVelocity := FALSE;
END_IF
fStatusWordRead(CLK := fbGetStatusword.bBusy);
IF fStatusWordRead.Q THEN
	bGetStatusword := FALSE;
END_IF


]]></ST>
    </Implementation>
    <LineIds Name="P_VelocityModeTest">
      <LineId Id="895" Count="0" />
      <LineId Id="892" Count="1" />
      <LineId Id="897" Count="0" />
      <LineId Id="861" Count="7" />
      <LineId Id="875" Count="0" />
      <LineId Id="869" Count="5" />
      <LineId Id="824" Count="0" />
      <LineId Id="904" Count="0" />
      <LineId Id="898" Count="0" />
      <LineId Id="909" Count="3" />
      <LineId Id="899" Count="2" />
      <LineId Id="896" Count="0" />
      <LineId Id="902" Count="0" />
      <LineId Id="913" Count="0" />
      <LineId Id="916" Count="1" />
      <LineId Id="945" Count="0" />
      <LineId Id="918" Count="0" />
      <LineId Id="903" Count="0" />
      <LineId Id="914" Count="0" />
      <LineId Id="939" Count="0" />
      <LineId Id="942" Count="0" />
      <LineId Id="915" Count="0" />
      <LineId Id="905" Count="0" />
      <LineId Id="884" Count="7" />
      <LineId Id="881" Count="0" />
      <LineId Id="827" Count="2" />
    </LineIds>
  </POU>
</TcPlcObject>